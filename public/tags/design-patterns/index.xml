<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design patterns on Daker Pinheiro</title>
    <link>https://dakerfp.com/tags/design-patterns/</link>
    <description>Recent content in Design patterns on Daker Pinheiro</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>â’¸ 2017 Daker Fernandes Pinheiro</copyright>
    <lastBuildDate>Thu, 07 Jul 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dakerfp.com/tags/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Singletons using std::weak_ptr</title>
      <link>https://dakerfp.com/post/weak_ptr_singleton/</link>
      <pubDate>Thu, 07 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://dakerfp.com/post/weak_ptr_singleton/</guid>
      <description>A common issue is how a resource and initialize it only when needed. A common C++ pattern to solve this is using the Resource Acquisition Is Initialization aka RAII. That&amp;rsquo;s what smart pointers do when created and get out of scope. But what if these resources must be unique?
The first thing that comes in mind is a singleton, but the plain singleton pattern, which has a static method or function returning a raw pointer usually creates the resource only once.</description>
    </item>
    
  </channel>
</rss>