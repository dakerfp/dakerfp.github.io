<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opengl on Daker Pinheiro</title>
    <link>https://dakerfp.com/tags/opengl/</link>
    <description>Recent content in Opengl on Daker Pinheiro</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>â’¸ 2017 Daker Fernandes Pinheiro</copyright>
    <lastBuildDate>Wed, 12 Dec 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dakerfp.com/tags/opengl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenGL Lesson 02 - Drawing with OpenGL</title>
      <link>https://dakerfp.com/post/opengl-lesson-02-drawing-with-opengl/</link>
      <pubDate>Wed, 12 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://dakerfp.com/post/opengl-lesson-02-drawing-with-opengl/</guid>
      <description>OpenGL is a primarily an C API, for drawing graphics. Implementations and bindings exists for several languages such as Java, Python, Ruby and Objective C. OpenGL became the standard drawing API supported by most modern device with graphics, independent from vendor, operational system, or if it is desktop or embedded. Of course the platform matters, but we can split the platform dependent code from pure OpenGL.
OpenGL became a standard mainly due to its rendering pipeline, which is trivially parallelized.</description>
    </item>
    
  </channel>
</rss>