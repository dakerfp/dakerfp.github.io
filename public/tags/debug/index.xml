<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debug on Daker Pinheiro</title>
    <link>https://dakerfp.com/tags/debug/</link>
    <description>Recent content in Debug on Daker Pinheiro</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>â’¸ 2017 Daker Fernandes Pinheiro</copyright>
    <lastBuildDate>Fri, 27 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dakerfp.com/tags/debug/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Improve your lazy debugging in C&#43;&#43;</title>
      <link>https://dakerfp.com/post/improve-your-lazy-debugging-in-c/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://dakerfp.com/post/improve-your-lazy-debugging-in-c/</guid>
      <description>Are you too lazy to learn your debugger? When debugging, I usually want to know if some code section is reached.
I can do this:
void foobar() { printf(&amp;quot;foobar()\n&amp;quot;); // ... do foobar }  But I should use cout instead printf in C++. printf is faster, but in this case it should be irrelevant. So I have:
void foobar() { std::cout &amp;lt;&amp;lt; &amp;quot;foobar()&amp;quot; &amp;lt;&amp;lt; std::endl; // ... do foobar }  I could also use GCC&amp;rsquo;s function name macro __PRETTY_FUNCTION__ and __LINE__ macro to identify the reached code section easier.</description>
    </item>
    
  </channel>
</rss>